@model IEnumerable<Services.DTOs.CategoryDTO>

@{
    ViewData["Title"] = "Categories";
}

<h2>Category Management</h2>
<button id="btnCreate" class="btn btn-primary" data-toggle="modal" data-target="#modalCategory">Create Category</button>
<input type="text" id="searchBox" placeholder="Search..." class="form-control" />

<table class="table table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Description</th>
            <th>Parent</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="categoryTable">
        @foreach (var category in Model)
        {
            <tr>
                <td>@category.CategoryId</td>
                <td>@category.CategoryName</td>
                <td>@category.CategoryDesciption</td>
                <td>@category.ParentCategoryName</td>
                <td>
                    <button class="btn btn-warning btnEdit" data-id="@category.CategoryId">Edit</button>
                    <button class="btn btn-danger btnDelete" data-id="@category.CategoryId">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal Placeholder -->
<div id="modalPlaceholder"></div>

@section Scripts {
    <script>
        $(document).ready(function() {
                    $('#btnCreate').click(function() {
            $.get("@Url.Action("Create", "Categories")", function(data) {
                $('#modalPlaceholder').html(data);
                $('#categoryModal').modal('show');
            });
        });
        $(document).ready(function () {
            $('.btnEdit').click(function () {
                let id = $(this).data('id');
                $.get("@Url.Action("Edit", "Categories")", { id: id })
                    .done(function (data) {
                        $('#modalPlaceholder').html(data); // Insert valid HTML
                        $('#categoryModal').modal('show'); // Show modal
                    })
                    .fail(function (xhr) {
                        console.error("Error: " + xhr.responseText);
                        alert("Failed to load category edit form.");
                    });
            });

            // Ensure Close button works
            $(document).on('click', '.close, .btn-secondary', function () {
                $('#categoryModal').modal('hide');
            });

            // Update action
            $(document).on('click', '#updateCategory', function () {
                $.ajax({
                    url: "@Url.Action("Edit", "Categories")",
                    type: "POST",
                    data: $('#editCategoryForm').serialize(),
                    success: function (response) {
                        if (response.success) {
                            $('#categoryModal').modal('hide'); // Close modal
                            location.reload(); // Refresh page
                        } else {
                            alert("Validation Errors: " + response.errors.join("\n"));
                        }
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });
            });
        });
        $(document).ready(function () {
            // Load Delete modal
            $('.btnDelete').click(function () {
                let id = $(this).data('id');
                $.get("/Categories/Delete", { id: id }, function (data) {
                    $('#modalPlaceholder').html(data);
                    $('#deleteCategoryModal').modal('show');
                }).fail(function (xhr) {
                    alert("Error loading delete modal: " + xhr.responseText);
                });
            });

        $(document).on('click', '#confirmDelete', function () {
            let id = $('#deleteCategoryId').val();
            let token = $('input[name="__RequestVerificationToken"]').val(); // Get anti-forgery token

            console.log("Deleting category with ID:", id, "Token:", token); // Debugging

            $.ajax({
                url: "/Categories/DeleteConfirmed",
                type: "POST",
                contentType: "application/json",
                headers: {
                    "RequestVerificationToken": token // Send anti-forgery token
                },
                data: JSON.stringify({ Id: parseInt(id) }), // Fix key case (Id instead of id)
                success: function (response) {
                    if (response.success) {
                        $('#deleteCategoryModal').modal('hide');
                        location.reload();
                    } else {
                        alert("Error deleting category.");
                    }
                },
                error: function (xhr) {
                    console.error("Error:", xhr.responseText);
                    alert("Error: " + xhr.responseText);
                }
            });
        });
        });
        });
    </script>
<style>
        /* Tổng quan cho phần quản lý Category */
        h2 {
            font-size: 2rem;
            color: #343a40;
            text-align: center;
            margin-bottom: 30px;
            font-weight: 600;
        }

        /* Nút Create Category */
        #btnCreate {
            font-size: 1.1rem;
            margin-bottom: 20px;
            padding: 10px 20px;
            border-radius: 5px;
            transition: all 0.3s ease;
            width: auto; /* Đặt chiều rộng tự động cho nút */
            display: inline-block; /* Đảm bảo nó không chiếm hết chiều rộng */
        }

            #btnCreate:hover {
                background-color: #0056b3;
                border-color: #0056b3;
                transform: scale(1.05);
            }

        /* Thanh tìm kiếm */
        #searchBox {
            width: 100%;
            max-width: 300px;
            margin-bottom: 30px;
            padding: 10px;
            font-size: 1rem;
            border-radius: 5px;
            border: 1px solid #ccc;
            transition: all 0.3s ease;
        }

            #searchBox:focus {
                border-color: #007bff;
                outline: none;
            }

        /* Định dạng cho bảng Category */
        .table {
            width: 100%;
            margin-top: 30px;
            border-collapse: collapse;
            border-radius: 5px;
            overflow: hidden;
        }

            .table th, .table td {
                padding: 12px 15px;
                text-align: center;
            }

            .table th {
                background-color: #007bff;
                color: white;
                font-weight: bold;
            }

            .table td {
                background-color: #f8f9fa;
                color: #343a40;
                border-top: 1px solid #ddd;
            }

            /* Tạo hiệu ứng hover cho các hàng trong bảng */
            .table tbody tr:hover {
                background-color: #e9ecef;
                cursor: pointer;
            }

        /* Định dạng các nút Edit và Delete trong bảng */
        .btn {
            padding: 8px 16px; /* Điều chỉnh khoảng cách giữa các phần tử trong nút */
            font-size: 1rem;
            border-radius: 5px;
            transition: all 0.3s ease;
            margin-right: 5px;
            width: 80%; /* Chiều rộng của nút bằng nhau (Edit và Delete) */
            text-align: center;

        }

        /* Nút Edit */
        .btnEdit {
            background-color: #5bc0de; /* Màu xanh dương nhẹ */
            border-color: #46b8da;
            color: white;
            margin-bottom: 5px;
        }

        /* Nút Delete */
        .btnDelete {
            background-color: #dc3545; /* Màu đỏ */
            border-color: #c82333;
            color: white;
        }

        /* Nút Edit Hover */
        .btnEdit:hover {
            background-color: #31b0d5;
            border-color: #269abc;
        }

        /* Nút Delete Hover */
        .btnDelete:hover {
            background-color: #c82333; /* Đậm hơn khi hover */
            border-color: #bd2130;
        }

        /* Sắp xếp các nút trong bảng cho hài hòa */
        td button {
            width: 48%; /* Mỗi nút sẽ chiếm khoảng 48% chiều rộng của ô bảng, tạo khoảng cách hợp lý */
            margin-right: 4%; /* Khoảng cách giữa hai nút */
        }

        
</style>
}


