@model Services.DTOs.CategoryDTO

<div class="modal fade" id="deleteCategoryModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" >&times;</button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the category <strong>@Model.CategoryName</strong>?</p>
                <input type="hidden" id="deleteCategoryId" value="@Model.CategoryId" />
                @Html.AntiForgeryToken() <!-- Add anti-forgery token here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" style="width: 100px">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete" style="width: 100px">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        $('#confirmDelete').click(function() {
            var categoryId = $('#deleteCategoryId').val();
            let token = $('input[name="__RequestVerificationToken"]').val(); // Get anti-forgery token

            $.ajax({
                url: "@Url.Action("DeleteConfirmed", "Categories")",
                type: "POST",
                contentType: "application/json", // Ensure content type is JSON
                headers: {
                    "RequestVerificationToken": token // Send anti-forgery token in headers
                },
                data: JSON.stringify({ Id: parseInt(categoryId) }), // Ensure the key is "Id"
                success: function(response) {
                    if (response.success) {
                        $('#deleteCategoryModal').modal('hide');
                        location.reload();
                    } else {
                        alert("Error deleting category: " + response.error);
                    }
                },
                error: function(xhr) {
                    console.error("Error:", xhr.responseText);
                    alert("Error: " + xhr.responseText);
                }
            });
        });
    });
</script>